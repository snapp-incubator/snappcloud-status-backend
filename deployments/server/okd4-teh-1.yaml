region: teh-1
hostname: okd4.teh-1.snappcloud.io

configs:
  querier:
    thanos_frontend: "http://thanos-query-frontend-http.openshift-monitoring.svc.cluster.local:9090/api/v1/query"
    services:
      - order: 1
        name: "PaaS: master-nodes"
        queries:
          disruption: 'count(cluster:master_nodes) <3 and count(cluster:master_nodes) > 0'
          outage: 'count(cluster:master_nodes) == 0'
      - order: 2
        name: "PaaS: etcd-servers"
        queries:
          disruption: 'sum(etcd_server_has_leader == 1) < 3 and sum(etcd_server_has_leader == 1) > 0'
          outage: 'sum(etcd_server_has_leader == 1) == 0'
      - order: 3
        name: "Routes"
        queries:
          disruption: 'sum by (router_name) (changes(openshift_route_status{status="True"}[1h])) > 1'
          outage: 'count by (router_name) (openshift_route_status{status="True"}) == 0'
      - order: 4
        name: "IaaS"
        queries:
          disruption: 'sum by (job, instance_id) (increase(openstack_nova_server_status{status="ACTIVE"}[5m])) > 0'
          outage: 'sum(openstack_nova_up == 0) > 0 '
      - order: 5
        name: "Object Storage (S3)"
        queries:
          disruption: 'rate(ceph_osd_recovery_ops[5m]) > 0 '
          outage: 'absent(ceph_health_status==1) == 0'
      - order: 6
        name: "Container Registry: Harbor"
        queries:
          disruption: 'rate(harbor_core_http_request_total[5m]) > 100'
          outage: '(avg by (cluster_id) (harbor_up)) == 0'
      - order: 7
        name: "Ingress (L7)"
        queries:
          disruption: 'sum(changes(contour_httpproxy_valid[1h])) < sum(changes(contour_httpproxy_invalid[1h]))'
          outage: '(envoy_cluster_upstream_rq_xx{envoy_cluster_name="primary"}) == 0'
      - order: 8
        name: "Monitoring: Thanos"
        queries:
          disruption: 'sum(thanos_status{check="healthy"}) < (count(thanos_status)/2)'
          outage: 'sum(thanos_status{check="healthy"}) == 0'
      - order: 9
        name: "Monitoring: Prometheus"
        queries:
          disruption: 'rate(prometheus_http_requests_total{code=~"5.."}[5m]) > 0'
          outage: 'up{job="prometheus-operator"} == 0'


        
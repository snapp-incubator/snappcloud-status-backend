---
name: Lint, Test, Image Build and Chart release

on:
  push:
    branches: [ Workflows ]

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout 5m
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - run: go test -v ./... -covermode=atomic -coverprofile=coverage.out
      - uses: codecov/codecov-action@v3
        with:
          files: coverage.out

  build-main:
    name: build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          file: "Dockerfile"
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

  build-clients:
    name: build
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    strategy:
      matrix:
        dir: ["clients/proxy-client", "clients/harbor-client"]
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          file: "${{ matrix.dir }}/Dockerfile"
          context: ${{ matrix.dir }}
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}/${{ matrix.dir }}:${{ github.sha }}

  release:
    name: release
    runs-on: ubuntu-latest
    needs:
      - build-main
      - build-clients
    strategy:
      matrix:
        dir: ["deployments/server", "clients/proxy-client/deploy", "clients/harbor-client/deploy"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: ${{ matrix.dir }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
